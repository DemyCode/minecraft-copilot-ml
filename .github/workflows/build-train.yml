name: Train Minecraft Copilot ML model

on:
  workflow_dispatch:

jobs:
  build-train:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: minecraft-copilot-ml
        IMAGE_TAG: ${{ github.sha }}
      run: |
        BRANCH_NAME=$(echo '${{ github.ref }}' | sed 's/[^[:alnum:]\.\_\-]/-/g')
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest || echo 'The image does not exist yet.'
        docker build --cache-from $ECR_REGISTRY/$ECR_REPOSITORY:latest -t minecraft-copilot-ml .
        docker tag minecraft-copilot-ml $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag minecraft-copilot-ml $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME
        if [ ${{ github.ref }} = 'refs/heads/master' ]; then
          docker tag minecraft-copilot-ml $ECR_REGISTRY/$ECR_REPOSITORY:latest
        fi
        docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags

    - name: Run training
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: minecraft-copilot-ml
      run: |
        aws sagemaker create-training-job --training-job-name minecraft-copilot-ml-${{ github.sha }} \
          --algorithm-specification "TrainingImage=$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }},TrainingInputMode=File" \
          --role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/service-role/AmazonSageMaker-ExecutionRole-20230601T201737 \
          --resource-config InstanceCount=1,InstanceType=ml.g4dn.xlarge,VolumeSizeInGB=60 \
          --stopping-condition MaxRuntimeInSeconds=36000 \
          \
          --hyper-parameters "path-to-schematics=/opt/ml/input/data/schematicsData,path-to-output=/opt/ml/checkpoints" \
          --input-data-config '[{"ChannelName": "schematicsData","DataSource": {"S3DataSource": {"S3DataType": "S3Prefix","S3Uri": "s3://minecraft-schematics-16","S3DataDistributionType": "FullyReplicated"}}}]' \
          --checkpoint-config "S3Uri=s3://minecraft-copilot-ml-training-job/checkpoints/${{ github.ref }}_${{ github.sha }},LocalPath=/opt/ml/checkpoints" \
          --output-data-config S3OutputPath=s3://minecraft-copilot-ml-training-job/output/${{ github.ref }}_${{ github.sha }}
